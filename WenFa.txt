"Entry"->"Statements"

"ConstValue"->"floatValue"
"ConstValue"->"intValue"
"ConstValue"->"charValue"
"ConstValue"->"stringValue"
"ConstValue"->"boolValue"
"ConstValue"->"null"
"Break"->"break$[_[0-9][a-z][A-Z]]"
"Continue"->"continue$[_[0-9][a-z][A-Z]]"

"DefaultType"->"defaultType"

"Statements"->"Statement"
"Statements"->"Statements""Statement"
"StatementsWithBreakContinue"->"StatementWithBreakContinue"
"StatementsWithBreakContinue"->"StatementsWithBreakContinue""StatementWithBreakContinue"
"StatementWithBreakContinue"->;
"StatementWithBreakContinue"->"FuZhi"";"
"StatementWithBreakContinue"->"XunHuanWithBreakContinue"
"StatementWithBreakContinue"->"Break"";"
"StatementWithBreakContinue"->"Continue"";"
"Block"->{"Statements"}
"BlockWithBreakConinue"->{"StatementsWithBreakContinue"}
"Statement"->;
"Statement"->"FuZhi"";"
"Statement"->"XunHuan"
;"Statement"->"function""FuncDefine"

;"FuncDefine"->"Funccall""Block"
"XunHuanWithBreakContinue"->"do""BlockWithBreakConinue""while"("Condition")
"XunHuanWithBreakContinue"->"while"("Condition")"BlockWithBreakConinue"
"XunHuanWithBreakContinue"->"if"("Condition")"BlockWithBreakConinue"
"XunHuanWithBreakContinue"->"if"("Condition")"BlockWithBreakConinue""else""BlockWithBreakConinue"

"XunHuanW"->"do""BlockWithBreakConinue""while"("Condition")
"XunHuan"->"while"("Condition")"BlockWithBreakConinue"
"XunHuan"->"if"("Condition")"Block"
"XunHuan"->"if"("Condition")"Block""else""Block"

"Condition"->"V"

"FuZhi"->"V"

"V"->"Variable""lvbase""V"
"V"->"Variable""=""V"
"V"->"Value"

"Value"->"A0"
"Value"->"Value""lv0""A0"

"A0"->"A1"
"A0"->"A0""lv1""A1"

"A1"->"A2"
"A1"->"A1""lv2""A2"

"A2"->"A3"
"A2"->"A2""lv3""A3"

"A3"->"A4"
"A3"->"A3""lv4""A4"

"A4"->"A5"
"A4"->"A4""lv5""A5"

"A5"->"A6"
"A5"->"A5""lv6""A6"

"A6"->"A7"
"A6"->"A6""lv7""A7"

"A7"->"A8"
"A7"->"A7""lv8""A8"

"A8"->"A9"
"A8"->"A8""+""A9"
"A8"->"A8""-""A9"

"A9"->"A10"
"A9"->"A9""lv10""A10"

"A10"->"A11"
"A10"->"lv11""A10"
"A10"->"+""A10"
"A10"->"-""A10"
"A10"->"++""Variable"
"A10"->"--""Variable"

"A11"->"RealValue"
"A11"->"Variable""++"
"A11"->"Variable""--"

"RealValue"->"Funccall"
"RealValue"->"Variable"
"RealValue"->"ConstValue"
"RealValue"->("V")

"Variable"->"variable"
"Variable"->"RealValue"."variable"

"RealValue"->"Funccall"["V"]
"RealValue"->"Variable"["V"]
"RealValue"->"(""V"")"["V"]

"Funccall"->"Funchead"("Args")
"Funccall"->"Funchead"()

"Funchead"->"Funccall"
"Funchead"->"Variable"
"Funchead"->"(""V"")"

"Args"->"V"
"Args"->"Args","V"

"do":"do$[_[0-9][a-z][A-Z]]"
"while":"while$[_[0-9][a-z][A-Z]]"
"if":"if$[_[0-9][a-z][A-Z]]"
"else":"else$[_[0-9][a-z][A-Z]]"

"variable":"[_[a-z][A-Z]]*{[_[0-9][a-z][A-Z]]}"
"intValue":"int"
"floatValue":"float"
"boolValue":"bool"
"null":"null"
"stringValue":"string"
"charValue":"char"
;string和char单独处理,目前的识别器不好处理string类型

;"function":"function$[_[0-9][a-z][A-Z]]"

"defaultType":"float$[_[0-9][a-z][A-Z]]"
"defaultType":"int$[_[0-9][a-z][A-Z]]"
"defaultType":"string$[_[0-9][a-z][A-Z]]"
"defaultType":"char$[_[0-9][a-z][A-Z]]"
"defaultType":"bool$[_[0-9][a-z][A-Z]]"
"defaultType":"void$[_[0-9][a-z][A-Z]]"
"defaultType":"refer$[_[0-9][a-z][A-Z]]"
"defaultType":"map$[_[0-9][a-z][A-Z]]"
"defaultType":"array$[_[0-9][a-z][A-Z]]"


"=":"=$[=]"
;"lvbase":"="
"lvbase":"\*="
"lvbase":"/="
"lvbase":"%="
"lvbase":"+="
"lvbase":"-="
"lvbase":"<<="
"lvbase":">>="
"lvbase":"&="
"lvbase":"|="
"lvbase":"^="

"lv0":"||"
"lv1":"&&"
"lv2":"|"
"lv3":"^"
"lv4":"&"
"lv5":"!="
"lv6":"=="

"lv7":">="
"lv7":">$[>]"
"lv7":"<="
"lv7":"<$[<]"

"lv8":">>"
"lv8":"<<"

"lv10":"\*"
"lv10":"/"
"lv10":"%"

"lv11":"!"
"lv11":"~"

"+":"+$[+]"
"-":"-$[-]"